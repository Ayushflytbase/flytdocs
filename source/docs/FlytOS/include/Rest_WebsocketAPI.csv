REST API Documentation,,,
,,,
,,Navigation APIs,
,,Title,"get namespace of the system
--This namespace is a part of the url for all other rest calls and websocket connection
--This has to be the first rest call before any other rest call or web socket connection."
,,URL,"http://<ip>/ros/get_global_namespace

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={}"
,,Success Response,"Code:200
Content: { success : true | false,
               param_info:{
                                      param_value:[String]
                                }
              }

true:  command accepted by system and returns namespace
param_info: the namespace value"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"$.ajax({
       type: ""POST"",
       dataType: ""json"",
       data: JSON.stringify(msgdata),
       url: ""http://""+ip+""/ros/get_global_namespace"",
       success: function(data){"
,,,
,,,
,,Title,"Disarm the drone
--Disarming the drone means you have finished flying and the drone can be handled and safe to approach.
--In disarmed state the drone does not react to any RC inputs given or mission execution commands."
,,URL,"http://<ip>/ros/<namespace>/navigation/disarm

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call.
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={}"
,,Success Response,"Code:200
Content: { success : true | false }

true:  command accepted by system and system disarmed
false: command rejected by system and system remains armed"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"$.ajax({
       type: ""GET"",
       url: ""http://<ip>/ros/<namespace>/navigation/disarm"",
       success: function(data){
               console.log(data);
       }
)};"
,,,
,,Title,"Takeoff 
--Takeoff command arms the drone and the drone hovers at a given height.
--Height is provided as a parameter to this API call."
,,URL,"http://<ip>/ros/<namespace>/navigation/take_off

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call.
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={
                    takeoff_alt : [numeric:float]
                }
Example:

msgdata={
                    takeoff_alt : 3.00
               }
"
,,Success Response,"Code:200
Content: { success : true | false }

true:  command accepted by system and system takesoff
false: command rejected by system and system remains as it is"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"var msgdata={};
    msgdata[""takeoff_alt""]=4.00;
    $.ajax({
       type: ""POST"",
       dataType: ""json"",
       data: JSON.stringify(msgdata),
       url: ""http://""+ip+""/ros/""+namespace+""/navigation/take_off"",
       success: function(data){
             console.log(data);
       }
    });
"
,,,
,,Title,"Land the drone
--Land command brings th e drone down to the specified local coordinated.
--This does not disarm the system."
,,URL,"http://<ip>/ros/<namespace>/navigation/land

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call.
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={}                    
"
,,Success Response,"Code:200
Content: { success : true | false }

true:  command accepted by system and system lands
false: command rejected by system and system continues with current mission"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"$.ajax({
       type: ""GET"",
       url: ""http://<ip>/ros/<namespace>/navigation/land"",
       success: function(data){
               console.log(data);
       }
)};"
,,,
,,Title,"Hover at current location
--This command commands the vehicle to hover at the current location.
--It overrides any previous mission being carried out and starts hovering."
,,URL,"http://<ip>/ros/<namespace>/navigation/position_hold

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call.
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={}"
,,Success Response,"Code:200
Content: { success : true | false }

true:  command accepted by system and system starts hovering
false: command rejected by system and system continues with current mission"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"$.ajax({
       type: ""GET"",
       url: ""http://<ip>/ros/<namespace>/navigation/position_hold"",
       success: function(data){
               console.log(data);
       }
)};"
,,,
,,Title,"Go to a specified location and hover
--This command commands the vehicle to go to a specified location.
--It overrides any previous mission being carried out and starts hovering."
,,URL,"http://<ip>/ros/<namespace>/navigation/position_set

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call.
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={
                   twist:{
                                twist:{
                                              linear:{
                                                             x: [numeric:float],
                                                             y: [numeric:float],
                                                             z: [numeric:float]
                                                       }
                                              angular:{
                                                              z: [numeric:float]
                                                          }
                                        }
                           },
                   tolerance: [numeric:float],
                   async:[boolean],
                   relative: [boolean],
                   yaw_valid:[boolean]
               }

Example

msgdata={
                   twist:{
                                twist:{
                                              linear:{
                                                             x: 2.00,
                                                             y: 3.00,
                                                             z: -1.00
                                                       },
                                              angular:{
                                                               z:1.0
                                                          }
                                        }
                           },
                   tolerance: 2.00,
                   async:true,
                   relative: false,
                   yaw_valid:true
               }
"
,,Success Response,"Code:200
Content: { success : true | false }

true:  command accepted by system and system starts hovering
false: command rejected by system and system continues with current mission"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"var  msgdata={};
msgdata[""twist""]={};
msgdata.twist[""twist""]={};
masdata.twist.twist[""linear""]={};
msgdata.twist.twist.linear[""x""]=2.00;
msgdata.twist.twist.linear[""y""]=3.00;
msgdata.twist.twist.linear[""z""]=-1.00;
msgdata.twist.twist[""angular""]={};
msgdata.twist.twist.angular[""z""]=1.00;
msgdata[""tolerance""]=2.00;
msgdata[""async""]=true;
msgdata[""relative""]=false;
msgdata[""yaw_valid""]=true;

$.ajax({
       type: ""GET"",
       dataType: ""json"",
       data: JSON.stringify(msgdata),
       url: ""http://<ip>/ros/<namespace>/navigation/position_set"",
       success: function(data){
               console.log(data);
       }
)};"
,,Notes,"linear:x ,y,z : xyz local position coordinates with respect to NED 
angular: z  : used for heading when yaw_valid set to true
tolerance: The radial value within which the setpoint is considered reached
relative: Decides whether the give xyz coordination are supposed to be taken relative to the current location or relative to origin.
yaw_valid: Decides whether to use angular:z value for deciding the setpoint heading or just use default heading."
,,,
,,Title,"Attain a velocity
--This command commands the vehicle to attain a specified velocity in the specified direction.
--It overrides any previous mission being carried out."
,,URL,"http://<ip>/ros/<namespace>/navigation/velocity_set

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call.
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={
                   twist:{
                                twist:{
                                              linear:{
                                                             x: [numeric:float],
                                                             y: [numeric:float],
                                                             z: [numeric:float]
                                                       }
                                              angular:{
                                                              z: [numeric:float]
                                                          }
                                        }
                           },
                   tolerance: [numeric:float],
                   async:[boolean],
                   relative: [boolean],
                   yaw_valid:[boolean]
               }

Example

msgdata={
                   twist:{
                                twist:{
                                              linear:{
                                                             x: 2.00,
                                                             y: 3.00,
                                                             z: -1.00
                                                       },
                                              angular:{
                                                               z:1.0
                                                          }
                                        }
                           },
                   tolerance: 2.00,
                   async:true,
                   relative: false,
                   yaw_valid:true
               }
"
,,Success Response,"Code:200
Content: { success : true | false }

true:  command accepted by system and system goes on to attain the given velocity
false: command rejected by system and system continues with current mission"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"var  msgdata={};
msgdata[""twist""]={};
msgdata.twist[""twist""]={};
masdata.twist.twist[""linear""]={};
msgdata.twist.twist.linear[""x""]=2.00;
msgdata.twist.twist.linear[""y""]=3.00;
msgdata.twist.twist.linear[""z""]=-1.00;
msgdata.twist.twist[""angular""]={};
msgdata.twist.twist.angular[""z""]=1.00;
msgdata[""tolerance""]=2.00;
msgdata[""async""]=true;
msgdata[""relative""]=false;
msgdata[""yaw_valid""]=true;

$.ajax({
       type: ""GET"",
       dataType: ""json"",
       data: JSON.stringify(msgdata),
       url: ""http://<ip>/ros/<namespace>/navigation/velocity_set"",
       success: function(data){
               console.log(data);
       }
)};"
,,Notes,"linear:x ,y,z : velocity setpoint with respect to NED 
angular: z  : used for heading when yaw_valid set to true
tolerance: The radial value within which the setpoint is considered reached
relative: Decides whether the give xyz coordination are supposed to be taken relative to the current location or relative to origin.
yaw_valid: Decides whether to use angular:z value for deciding the heading or just use default heading."
,,,
,,Title,"Attain an attitude
--This command commands the vehicle to attain a specified attitude.
--It overrides any previous mission being carried out."
,,URL,"http://<ip>/ros/<namespace>/navigation/attitude_set

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call.
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={
                   pose:{
                                twist:{
                                              angular:{
                                                             x: [numeric:float],
                                                             y: [numeric:float],
                                                             z: [numeric:float]
                                                       }
                                        }
                           },
                   thrust: [numeric:float]
               }

Example

msgdata={
                   pose:{
                                twist:{
                                              angular:{
                                                             x: 2.00,
                                                             y: 3.00,
                                                             z: -1.00
                                                       }
                                        }
                           },
                   thrust: [numeric:float]
               }
"
,,Success Response,"Code:200
Content: { success : true | false }

true:  command accepted by system and system starts to attain the given attitude
false: command rejected by system and system continues with current mission"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"var  msgdata={};
msgdata[""pose""]={};
msgdata.pose[""twist""]={};
msgdata.pose.twist[""angular""]={};
msgdata.pose.twist.angular[""x""]=1.00;
msgdata.pose.twist.angular[""y""]=3.00;
msgdata.pose.twist.angular[""z""]=-1.00;
msgdata[""thrust""]=2.00;

$.ajax({
       type: ""GET"",
       dataType: ""json"",
       data: JSON.stringify(msgdata),
       url: ""http://<ip>/ros/<namespace>/navigation/attitude_set"",
       success: function(data){
               console.log(data);
       }
)};"
,,Notes,"angular: x,y,z  : roll, pitch, yaw values for attitude setpoint."
,,,
,,Title,"Execute a user defined script
--This command commands the vehicle to perform a predefined or user defined scripts when called with specific app name and its respective parameters.
--It overrides any previous mission being carried out.."
,,URL,"http://<ip>/ros/<namespace>/navigation/exec_script

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call.
"
,,Method,GET | POST
,,Data Params,"data:JSON.stringify(msgdata)

msgdata={
                    app_name:[string],
                    arguments:[string]
               }

Example:


msgdata={
                    app_name: ""app12"",
                    arguments:""2 45 4 run""
               }"
,,Success Response,"Code:200
Content: { success : true | false }

true:  command accepted by system and system starts hovering
false: command rejected by system and system continues with current mission"
,,Error Response,"Code:404
server out of range"
,,Sample Call,"var  msgdata={};
msgdata[""app_name""]=""app12;
msgdata[""arguments""]=""2 45 4 run"";

$.ajax({
       type: ""GET"",
       dataType: ""json"",
       data: JSON.stringify(msgdata),
       url: ""http://<ip>/ros/<namespace>/navigation/exec_script"",
       success: function(data){
               console.log(data);
       }
)};"
,,Notes,"app_name: The name of the script to be run
arguments: List of arguments required by the script sent in a single string seperated by spaces."
,,,
,,,
,,,
"Web socket API documentation (Telemetry data)
",,,
,,Title,"Web socket initialisation
--requires additional libraries: event.emitter.js and roslib.js to be included in case of web client"
,,URL,"ws://<ip>/websocket

<ip>: IP of the flytpod in the network along with port
          eg: 192.168.x.xxx:9090
"
,,Sample call,"var ros = new ROSLIB.Ros({
                 url : 'ws://'+ip+'/websocket'
               });


               ros.on('connection', function() {
                 console.log('Connected to websocket server.');
               });

               ros.on('error', function(error) {
                 console.log('Error connecting to websocket server: ', error);
               });

               ros.on('close', function() {
                 console.log('Connection to websocket server closed.');
               });
"
,,,
,,Title,"Real time Attitude data
--Fetches real time attitude data at required rate.
--To be done after initialization of websocket."
,,Initialisation sample,"var listenerImu = new ROSLIB.Topic({
                       ros :ros,
                       name : '/<namespace>/mavros/imu/data',
                       messageType : 'sensor_msgs/Imu',
                       throttle_rate: 200
               });

<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call."
,,Subscription sample,"listenerImu.subscribe(function(message) {
                        console.log(message.orientation.x);
                        console.log(message.orientation.y);
                        console.log(message.orientation.z);
                        console.log(message.orientation.w);
                        console.log(message.angular_velocity.x);
                        console.log(message.angular_velocity.y);
                        console.log(message.angular_velocity.z);
                        console.log(message.linear_acceleration.x);
                       console.log(message.linear_acceleration.y);
                       console.log(message.linear_acceleration.z);

               });"
,,Notes,"ros: Pointed to the ros oblect created in the initialization of a web socket connection
name: Requires the name of the topic which gives out the required data.
messageType: Set the type of predefined data structure used to deliver the required attitude data
throttle_rate: Sets the rate at which callbacks are called in miliseconds."
,,,
,,Title,"Real time Local position data
--Fetches real time local position data at required rate.
--To be done after initialization of websocket."
,,Initialisation sample,"var listenerLocalPosition = new ROSLIB.Topic({
           ros :ros,
           name : '/<namespace>/mavros/local_position/local',
           messageType : 'geometry_msgs/TwistStamped',
           throttle_rate: 200
               });

<namespace>: Name of the flytpod (default: flytpod) which is required for every rest call and can be fetched from get namespace rest call."
,,Subscription sample," listenerLocalPosition.subscribe(function(message) {

                       console.log(message.twist.linear.x,);
                       console.log(message.twist.linear.y);
                       console.log(message.twist.linear.z);
                       console.log(message.twist.angular.x);
                       console.log(message.twist.angular.y);
                       console.log(message.twist.angular.z);
               });"
,,Notes,"ros: Pointed to the ros oblect created in the initialization of a web socket connection
name: Requires the name of the topic which gives out the required data.
messageType: Set the type of predefined data structure used to deliver the required local position data
throttle_rate: Sets the rate at which callbacks are called in miliseconds."